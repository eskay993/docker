services:
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    restart: unless-stopped
    # hostname: syncthing #optional
    environment:
      - PUID=${UID_MAIN}
      - PGID=${UID_MAIN}
      - TZ=${TIMEZONE}
    volumes:
      - ${APPDATA}/syncthing:/config
      - ${GDRIVE}:/gdrive
      - ${INCOMING}/sync:/sync
      - ${STORAGE}/Games:/games
      - ${ITCHY}/backup:/backup
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    
  homer:
    container_name: homer
    image: b4bz/homer:latest
    restart: unless-stopped
    user: "${UID_MAIN}:${UID_MAIN}"
    volumes:
      - ${APPDATA}/homer:/www/assets
    environment:
      - TZ=${TIMEZONE}
    ports:
      - 8050:8080

  homarr:
    container_name: homarr
    image: ghcr.io/homarr-labs/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - ${APPDATA}/homarr:/appdata
    env_file:
      - ${ENV_FILES}/homarr.env
    ports:
      - '7575:7575'

  ownfoil:
    container_name: ownfoil
    image: a1ex4/ownfoil
    restart: unless-stopped
    env_file:
    - ${ENV_FILES}/ownfoil.env
    volumes:
      - ${STORAGE}/Games/switch:/games
      # - ${APPDATA}/ownfoil:/config
    ports:
      - "8500:80"

  phoneinfoga:
    container_name: phoneinfoga
    restart: on-failure
    image: sundowndev/phoneinfoga:latest
    command:
      - "serve"
    ports:
      - "8080:5000"

  wallabag:
    image: wallabag/wallabag
    container_name: wallabag
    restart: unless-stopped
    env_file:
      - ${ENV_FILES}/wallabag.env
    ports:
      - "8008:80"
    volumes:
      - ${APPDATA}/wallabag/images:/var/www/wallabag/web/assets/images
    depends_on:
      - db
      - redis
  db:
    image: mariadb
    restart: unless-stopped
    env_file:
      - ${ENV_FILES}/wallabag.env
    volumes:
      - ${APPDATA}/wallabag/data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--innodb_initialized"]
      interval: 20s
      timeout: 3s
  redis:
    image: redis:alpine
    restart: unless-stopped    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 3s

#  slaanesh:
#    image: ghcr.io/h-quer/slaanesh:latest
#    container_name: slaanesh
#    user: ${UID_MAIN}:${UID_MAIN}
#    restart: unless-stopped
#    volumes:
#      - ${APPDATA}/slaanesh/config:/files/config
#      - ${APPDATA}/slaanesh/import:/files/import
#      - ${APPDATA}/slaanesh/export:/files/export
#      - ${APPDATA}/slaanesh/covers:/files/covers
#      - ${APPDATA}/slaanesh/database:/files/database
#      - ${APPDATA}/slaanesh/downloads:/files/downloads
#    ports:
#      - 8428:8080


  # ps2smb:
  #   container_name: ps2smb
  #   image: fortu/ps2smb
  #   restart: unless-stopped
  #   volumes:
  #     - ${APPDATA}/ps2smb/smb.conf':/etc/samba/smb.conf:rw 
  #     - ${STORAGE}/Games/ps2opl:/mnt/games:rw
  #   ports:
  #     - "445:445/tcp"
